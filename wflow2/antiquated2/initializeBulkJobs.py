#external modules
import os,sys,pickle,itertools,ase,json,operator,readJobs,misc
#internal modules
import jobs,printParse,details,misc


"""
Launch a bunch of bulk jobs to the Fireworks Queue

Inputs:
	- DOMAINS for all relevant DFT inputs (xcDomain,pspDomain,pwDomain, etc.)
	- FILTERS to narrow the combinatorial search space generated by the above Domains
"""
asedb = ase.db.connect('/scratch/users/ksb/db/ase.db')

"""
#############################
# FILTER DOWN TRAJS IN ASE DB                        
#############################                 
"""

def fAND(listx): return lambda z: all([x(z) for x in listx])

def selectElems(elemList):	
	"""ONLY traj's with one of these elements are included"""
	return lambda ID: ID in ([item for sublist in [[x.id for x in asedb.select(e)] for e in elemList] for item in sublist])
def singleElems(ID): 
	"""ONLY traj's with a single kind of element are included"""
	l = asedb.get(ID).get('numbers')
	return all([x==l[0] for x in l]) #every element in element list is equal

# use with 'selectElems()'
singleElemList= ['Ag','Al','Au','Ba','Be','C','Ca','Cd','Co','Cu','Fe','Ge','Ir','K','Li','Mg','Mo','Na','Nb','Ni','Os','Pb','Pd','Rb','Rh','Ru',"Sc",'Si','Sn','Sr','Ti','Zn','Zr']

#####
filters 	= fAND([singleElems,selectElems(['Al','Li','Ag','Pd','Mg','Zn','Rb','Nb'])])
allTrajs 	= [x.id for x in asedb.select()] 

################################################################################################
################################################################################################
trajDomain      = [x for x in allTrajs 	if filters(x)]

pwDomain    	= [1000,1100,1200,1300,1400,1500]
xcDomain     	= ['PBE','mBEEF']#,'RPBE','BEEF']#,
kptDomain   	= [2,4] 	# pts / A^-1

if True: 	pspDomain,dftDomain = ['sg15'],['gpaw']
else: 		pspDomain,dftDomain = ['gbrv15pbe'],['quantumespresso']


domains = [trajDomain,pwDomain,xcDomain,kptDomain,pspDomain,dftDomain]

################################################################################################

defaultParams = {'comments':None,'trajcomments':None
				,'jobkind':'latticeopt','relaxed':0,'kind':'bulk','bulkvacancy_json':json.dumps([]),'bulkscale_json':json.dumps([1,1,1])
				,'dwrat':10,'econv':5e-4,'mixing':0.1,'nmix':10,'maxstep':500,'nbands':-12,'sigma':0.1,'fmax':0.05,'xtol':0.005}

def main():
	
	combos 	= itertools.product(*domains)
	ncombo 	= reduce(operator.mul,[len(x) for x in domains])

	cols = ['pw','xc','kptden','psp','dftcode']
	jbs  = []

	for i,c in enumerate(combos):
		comboParams = {x:y for x,y in zip(cols,c[1:])}
		row 		= asedb.get(id=c[0])
		trajinfo 	= {'name':				row.name
						,'structure':		row.structure
						,'inittraj_pckl':	pickle.dumps(asedb.get_atoms(id=c[0]))}
		params 		= misc.mergeDicts([defaultParams,comboParams,trajinfo])

		job = jobs.assignJob(params)
		
		if job.new(): jbs.append(job)

	question = "Do you want to insert %d/%d new bulk job%s?"%(len(jbs),ncombo,'' if ncombo==1 else 's')

	if printParse.ask(question):
		for j in jbs: job.check();j.submit()
		misc.launch()

if __name__=='__main__':
	main()
#####
